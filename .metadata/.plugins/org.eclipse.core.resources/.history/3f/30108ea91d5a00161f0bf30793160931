package main.java.org.utils;


import java.util.List;

import main.java.org.json.JSONArray;

/**
 * The CustomJSONArray class extends the org.json.JSONArray, it can only be used
 * with objects implementing the JSONable interface. On creation, it will add
 * objects using the JSONObject returned by their .toJSON() method. On put, if
 * the object given extends JSONAble, the inserted object will be the one
 * returned by the .toJSON() method, otherwise the super method is called.
 *
 * @author Bancarel Valentin
 *
 */
public class CustomJSONArray extends JSONArray {

    public CustomJSONArray(List<? extends JSONAble> pList) throws TechniqueException {
        super();
        if (pList != null) {
            for (JSONAble lObject : pList) {
                this.put(lObject.toJSON());
            }
        }
    }

    @Override
    public JSONArray put(Object pValue) {
        if (pValue instanceof JSONAble && pValue != null) {
            try {
                return super.put(((JSONAble) pValue).toJSON());
            } catch (TechniqueException ex) {
                ex.printStackTrace();
            }
        }
        return super.put(pValue);
    }

    public CustomJSONArray() {
        super();
    }
}
